# meal_analysis.py
import os
from openai import AsyncOpenAI
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from telegram import ReplyKeyboardMarkup
from telegram.ext import MessageHandler, filters, ConversationHandler
from openai_utils import chat_with_openai
from utils import add_calories_with_rollover

from utils import extract_calories
from db import SessionLocal, Parameters

from dotenv import load_dotenv

import base64
load_dotenv()

ASK_MEAL_DESCRIPTION = 10

def get_meal_conv_handler():
    return ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—ë–º –ø–∏—â–∏"), ask_for_meal)],
        states={
            ASK_MEAL_DESCRIPTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_meal_text)]
        },
        fallbacks=[]
    )

# —Ñ—É–Ω–∫—Ü–∏—è ask_for_meal
async def ask_for_meal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–ö—É—Ä–∏—Ü–∞ 200 –≥, —Ä–∏—Å 150 –≥, —Å–∞–ª–∞—Ç¬ª):")
    return ASK_MEAL_DESCRIPTION


async def handle_meal_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()

    prompt = (
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏—ë–º –ø–∏—â–∏ –∏ –æ—Ü–µ–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ë–ñ–£ –∏ –∫–∞–ª–æ—Ä–∏–π.\n"
        "‚ùóÔ∏è–û—Ç–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –±–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤, —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n"
        "‚ùóÔ∏è–¢–æ–ª—å–∫–æ 4 —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "–ë–µ–ª–∫–∏: __ –≥\n–ñ–∏—Ä—ã: __ –≥\n–£–≥–ª–µ–≤–æ–¥—ã: __ –≥\n–ö–∞–ª–æ—Ä–∏–∏: __ –∫–∫–∞–ª\n\n"
        f"–ü—Ä–∏—ë–º –ø–∏—â–∏: {user_input}"
    )

    try:
        await update.message.reply_text("‚è≥ –í–∞—à –¥–∏–µ—Ç–æ–ª–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...")

        # –æ–¥–∏–Ω –≤—ã–∑–æ–≤ GPT
        gpt_answer = await chat_with_openai(prompt)
        await update.message.reply_text(gpt_answer)

        # –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–∞–ª–æ—Ä–∏–∏
        calories = extract_calories(gpt_answer)

        # –ø—Ä–∏–±–∞–≤–ª—è–µ–º –†–û–í–ù–û –û–î–ò–ù –†–ê–ó ‚Äî —á–µ—Ä–µ–∑ —É—Ç–∏–ª–∏—Ç—É —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º –ø–æ –¥–Ω—è–º
        telegram_id = update.message.from_user.id
        add_calories_with_rollover(telegram_id, calories)

    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

    # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [
        ["‚¨ÜÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ—Å—Ç", "‚öñ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Å"],
        ["üìÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç", "üöª –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª"],
        ["üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å", "ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å GPT"], ["üçΩ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—ë–º –ø–∏—â–∏"]
    ]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    return ConversationHandler.END
